@startuml
!include plantuml.skin

title Multi-Issuer Token Validation Flow

actor "Application" as App
participant "TokenValidator" as Validator
participant "NonValidatingJwtParser" as Parser
participant "IssuerConfigResolver" as Resolver
participant "IssuerConfig" as Config
participant "JwksLoader" as Loader

== Token Validation with Issuer Resolution ==

App -> Validator: validateAccessToken(tokenString)
activate Validator

Validator -> Parser: decode(tokenString)
activate Parser
Parser --> Validator: DecodedJwt
deactivate Parser

Validator -> Parser: getIssuer()
activate Parser
Parser --> Validator: "auth.partner.com"
deactivate Parser

Validator -> Resolver: resolveConfig("auth.partner.com")
activate Resolver

note right of Resolver
  Resolver maintains multiple issuer configs:
  - auth.example.com
  - auth.partner.com  ← matches!
  - auth.internal.com
end note

Resolver --> Validator: IssuerConfig for auth.partner.com
deactivate Resolver

Validator -> Config: getJwksLoader()
activate Config
Config --> Validator: JwksLoader instance
deactivate Config

Validator -> Loader: getKeyInfo(kid)
activate Loader
Loader --> Validator: KeyInfo
deactivate Loader

Validator -> Validator: Validate signature,\nclaims, etc.

Validator --> App: AccessTokenContent
deactivate Validator

@enduml
